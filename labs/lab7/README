################################################################################
#  Stencil Pattern
################################################################################

The stencil pattern operates on tiles of elements within a collection.

################################################################################
#  Problem Statement
################################################################################

One of the common first steps for computer vision is to compute edges.  Although
this is counter intuitive, one can obtain better edges if the image is blurred
before applying a gradient filter.

You have been provided code for a serial gaussian blur filter and code for
Prewitt kernels to help highlight edges. Please improve the performance using
parallelism and add the Prewitt gradient filters to the image processing.

################################################################################
#  What to do
################################################################################

1. Check out the repository onto WOPR

     git fetch
     git checkout labs
 
2. Run the Makefile and look at the source code and output of the serial program.

3. Optimize the serial program if you think it necessary.

4. Write a parallel version of the program in OpenMP and one of the other
   languages.

5. Update the Makefile entries for the other build targets with compilation
   commands for source files and a check_xyz target.

6. Integrate the Prewitt kernels into one of your implementations so that you
   generate output highlighting the edges (see the example in the slides for
   the OSNAP logo).

7. Add the file, timing.txt, showing timing results for the two serial versions
   (original and optimized, if any) and the two parallel versions of just the
   blurring filter (not applying edge detection).

8. Commit the source files, timing.txt, and updated Makefile to your repository.

Due date/time is before lab in Week 9.
