################################################################################
#  Data Reorganization Pattern
################################################################################

Data locality with respect to space and time can have large impacts 
on runtime performance.

In this lab you will apply Data Reorganization pattern(s), 
 possibly in addition to other parallel patterns, 
 to improve runtime performance.

################################################################################
#  Problem Statement
################################################################################

Following the public release of the HeartBleed exploit against OpenSSL,
 OSNAP executive management no longer trusts software written and 
 maintained by outside development organizations. 
 A large number of OSNAP projects require efficient linear algebra code. 

In this lab, you are to improve the performance of the 
matrix multiplication code using data reorganization. 
You may need to modify the algorithm and/or add additional logic to move 
the data. 

Performance measurement should only be done for the actual multiply logic. 
Time spent outside of the matrix_multiply function need not be measured.

################################################################################
#  What to do
################################################################################

1. Check out the repository onto WOPR

	git fetch
	git checkout origin/master labs

2. Run the Makefile and look at the source code and output of the program

3. Write parallel versions of the program in OpenMP and  Cilk OR TBB.

4. Wite a paragraph on your data reorganization, why you thought it 
would help, and whether it actually helped in 'datareorg.txt'

5. Update the Makefile entries for your build targets with compilation 
commands for source files.

6. Update the Makefile entries for the check targets 
   with run commands for your executables.

7. Commit the source files and updated Makefile to your repository.
